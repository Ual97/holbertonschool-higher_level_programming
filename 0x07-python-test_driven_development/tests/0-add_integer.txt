The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

TEST CASES:

    SUM WITH 2 POSITIVES:
    >>> print(add_integer(1, 2))
    3

    SUM WITH 1 NEGATIVE AND 1 POSITIVE:
    >>> print(add_integer(-1, 2))
    1

    SUM WITH 2 NEGATIVES:
    >>> print(add_integer(-1, -2))
    -3
    
    SUM WITH 1 ARG (A):
    >>> print(add_integer(1))
    99

    NO ARGS:
    >>> print(add_integer(None))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    SUM WITH 3 ARGS:
    >>> print(add_integer(1, 2, 3))
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

    SUM WITH OTHER DATA TYPE:
    >>> print(add_integer("hello_world", 2))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    SUM WITH INFINITE (as float):
    >>> print(add_integer(float("inf")))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer